// generated by tscfg 0.1.5 on Sat Jan 30 11:58:19 PST 2016
// source: example/def.example.conf

package tscfg.example

import com.typesafe.config.Config

case class ScalaExampleCfg(
  endpoint : Endpoint
) {
  override def toString: String = toString("")
  def toString(i:String): String = {
    i+ "Endpoint(\n" + this.endpoint.toString(i+"    ") +i+ ")\n"
  }
}
case class Endpoint(
  intReq : Int,
  interface : Interface,
  path : String,
  serial : Option[Int],
  url : String
) {
  override def toString: String = toString("")
  def toString(i:String): String = {
    i+ "intReq = " + this.intReq + "\n"+
    i+ "Interface(\n" + this.interface.toString(i+"    ") +i+ ")\n"+
    i+ "path = " + '"' + this.path + '"' + "\n"+
    i+ "serial = " + this.serial + "\n"+
    i+ "url = " + '"' + this.url + '"' + "\n"
  }
}
case class Interface(
  port : Int,
  `type` : Option[String]
) {
  override def toString: String = toString("")
  def toString(i:String): String = {
    i+ "port = " + this.port + "\n"+
    i+ "type = " + (if(this.`type`.isDefined) "Some(" +'"' +this.`type`.get+ '"' + ")" else "None") + "\n"
  }
}
object Interface {
  def apply(c: Config): Interface = {
    Interface(
      if(c.hasPathOrNull("port")) c.getInt("port") else 8080,
      if(c.hasPathOrNull("type")) Some(c.getString("type")) else None
    )
  }
}
object Endpoint {
  def apply(c: Config): Endpoint = {
    Endpoint(
      c.getInt("intReq"),
      Interface(c.getConfig("interface")),
      c.getString("path"),
      if(c.hasPathOrNull("serial")) Some(c.getInt("serial")) else None,
      if(c.hasPathOrNull("url")) c.getString("url") else "http://example.net"
    )
  }
}
object ScalaExampleCfg {
  def apply(c: Config): ScalaExampleCfg = {
    ScalaExampleCfg(
      Endpoint(c.getConfig("endpoint"))
    )
  }
}
