// generated by tscfg 0.3.3 on Thu Sep 01 11:12:22 PDT 2016
// source: example/issue12.conf

package tscfg.example

object ScalaIssue12Cfg {
  object Boolean {
    def apply(c: com.typesafe.config.Config) = build(Some(c))
    def apply() = build(None)
    def build(c: scala.Option[com.typesafe.config.Config]): Boolean = {
      Boolean(
        c.map(c => if(c.hasPathOrNull("bar")) c.getString("bar") else "foo").get
      )
    }
  }
  case class Boolean(
    bar : java.lang.String
  ) {
    override def toString: java.lang.String = toString("")
    def toString(i:java.lang.String): java.lang.String = {
      i+ "bar = " + this.bar + "\n"
    }
  }
  object Option {
    def apply(c: com.typesafe.config.Config) = build(Some(c))
    def apply() = build(None)
    def build(c: scala.Option[com.typesafe.config.Config]): Option = {
      Option(
        c.map(c => if(c.hasPathOrNull("bar")) c.getString("bar") else "baz").get
      )
    }
  }
  case class Option(
    bar : java.lang.String
  ) {
    override def toString: java.lang.String = toString("")
    def toString(i:java.lang.String): java.lang.String = {
      i+ "bar = " + this.bar + "\n"
    }
  }
  object String {
    def apply(c: com.typesafe.config.Config) = build(Some(c))
    def apply() = build(None)
    def build(c: scala.Option[com.typesafe.config.Config]): String = {
      String(
        c.map(c => if(c.hasPathOrNull("bar")) c.getString("bar") else "baz").get
      )
    }
  }
  case class String(
    bar : java.lang.String
  ) {
    override def toString: java.lang.String = toString("")
    def toString(i:java.lang.String): java.lang.String = {
      i+ "bar = " + this.bar + "\n"
    }
  }
  object Int {
    def apply(c: com.typesafe.config.Config) = build(Some(c))
    def apply() = build(None)
    def build(c: scala.Option[com.typesafe.config.Config]): Int = {
      Int(
        c.map(c => if(c.hasPathOrNull("bar")) c.getInt("bar") else 1).get
      )
    }
  }
  case class Int(
    bar : scala.Int
  ) {
    override def toString: java.lang.String = toString("")
    def toString(i:java.lang.String): java.lang.String = {
      i+ "bar = " + this.bar + "\n"
    }
  }
  def apply(c: com.typesafe.config.Config) = build(Some(c))
  def apply() = build(None)
  def build(c: scala.Option[com.typesafe.config.Config]): ScalaIssue12Cfg = {
    ScalaIssue12Cfg(
      Boolean.build(c.map(c => if (c.hasPath("Boolean")) Some(c.getConfig("Boolean")) else None).get),
      Option.build(c.map(c => if (c.hasPath("Option")) Some(c.getConfig("Option")) else None).get),
      String.build(c.map(c => if (c.hasPath("String")) Some(c.getConfig("String")) else None).get),
      Int.build(c.map(c => if (c.hasPath("int")) Some(c.getConfig("int")) else None).get)
    )
  }
}
case class ScalaIssue12Cfg(
  Boolean : ScalaIssue12Cfg.Boolean,
  Option  : ScalaIssue12Cfg.Option,
  String  : ScalaIssue12Cfg.String,
  int     : ScalaIssue12Cfg.Int
) {
  override def toString: java.lang.String = toString("")
  def toString(i:java.lang.String): java.lang.String = {
    i+ "Boolean:\n" + this.Boolean.toString(i+"    ")+
    i+ "Option:\n" + this.Option.toString(i+"    ")+
    i+ "String:\n" + this.String.toString(i+"    ")+
    i+ "int:\n" + this.int.toString(i+"    ")
  }
}
